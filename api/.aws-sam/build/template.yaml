AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Techytechster.com Website APIs

  '
Globals:
  Function:
    Timeout: 5
Resources:
  WebsiteVisitTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: IPAddress
        AttributeType: S
      - AttributeName: Date
        AttributeType: S
      BillingMode: PROVISIONED
      KeySchema:
      - AttributeName: IPAddress
        KeyType: HASH
      - AttributeName: Date
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: Techytechster-Views
  WebsiteBlogTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: BlogTitle
        AttributeType: S
      - AttributeName: Date
        AttributeType: S
      BillingMode: PROVISIONED
      KeySchema:
      - AttributeName: BlogTitle
        KeyType: HASH
      - AttributeName: Date
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: Techytechster-Blog
  WebsiteVisitorRecord:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /wmetric
            Method: GET
            RestApiId:
              Ref: WebsiteAPI
      Policies:
        DynamoDBWritePolicy:
          TableName:
            Ref: WebsiteVisitTable
      ImageUri: websitevisitorrecord:go1.x-v1
    Metadata:
      DockerTag: go1.x-v1
      DockerContext: ./wmetric
      Dockerfile: Dockerfile
  BlogCUDEndpoint:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /blog/{operation+}
            Method: POST
            RestApiId:
              Ref: WebsiteAPI
      Policies:
        DynamoDBWritePolicy:
          TableName:
            Ref: WebsiteBlogTable
      ImageUri: blogcudendpoint:go1.x-v1
    Metadata:
      DockerTag: go1.x-v1
      DockerContext: ./blog
      Dockerfile: Dockerfile
  WebsiteAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Description: APIS for Techytechster.com
      Domain:
        DomainName: api.techytechster.com
        CertificateArn: arn:aws:acm:us-east-1:128153249323:certificate/f96e9425-e4f4-4389-a733-9e16828154dc
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: Z102258412TWJ99QD5B1H
      Cors:
        AllowMethods: '''POST, OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'''
        AllowOrigin: '''*'''
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: '''*'''
              Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'''
              Access-Control-Allow-Methods: '''OPTIONS,POST'''
        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: '''*'''
              Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'''
              Access-Control-Allow-Methods: '''OPTIONS,POST'''
Outputs:
  TechytechsterAPI:
    Description: API Gateway endpoint URL for Prod Techytechster
    Value:
      Ref: WebsiteAPI
