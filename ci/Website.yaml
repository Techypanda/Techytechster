AWSTemplateFormatVersion: '2010-09-09'

Description: Website Template for techytechster.com

Resources:
  AdminUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: admin_only
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: True
      AliasAttributes:
        - phone_number
        - email
        - preferred_username
      DeviceConfiguration:
        ChallengeRequiredOnNewDevice: True
        DeviceOnlyRememberedOnUserPrompt: True
      MfaConfiguration: "OFF" # MFA cost money, and I'm poor
      UserPoolName: "AdminUserPool"

  AdminLoginClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref AdminUserPool
      CallbackURLs:
        - http://localhost:3000
        - https://admin.techytechster.com
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - phone
        - email
        - profile
        - openid
      ClientName: AdminLogin
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      SupportedIdentityProviders:
        - COGNITO

  AdminLoginPage:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: techytechsteradmin
      UserPoolId: !Ref AdminUserPool

  TechytechsterAPIS:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: techytechsterapirepo
      LifecyclePolicy:
        LifecyclePolicyText: '{
          "rules": [
            {
              "rulePriority": 1,
              "description": "Keep only one untagged image, expire all others",
              "selection": {
                "tagStatus": "untagged",
                "countType": "imageCountMoreThan",
                "countNumber": 1
              },
              "action": {
                "type": "expire"
              }
            }
          ]
        }'
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: techytechster
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            Id: "NoCORS"
            MaxAge: 3600
  SourceBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SourceBucket
      PolicyDocument:
        Statement:
        - Action:
            - 's3:GetObject'
          Effect: Allow
          Resource: !Join
            - ""
            - - !GetAtt SourceBucket.Arn
              - '/*'
          Principal: '*'
  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - www.techytechster.com
          - techytechster.com
        Origins:
          - DomainName: !GetAtt SourceBucket.RegionalDomainName
            Id: !Ref SourceBucket
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: !Ref SourceBucket
          ViewerProtocolPolicy: "redirect-to-https"
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: false
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
            Headers:
              - Access-Control-Request-Headers
              - Access-Control-Request-Method
              - Origin
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:128153249323:certificate/5ed3969c-6f4e-4457-bf1a-639f39279c88
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html

Outputs:
  SourceBucket:
    Value: !Ref SourceBucket